openapi: 3.0.3
info:
  title: Tebex Headless API
  description: |-
    The headless API is designed for implementing your own store frontend with the data of your store. You are able to call the Headless API directly from a web browser (such as within an SPA), or from a backend server, such as for in-game GUIs.
  termsOfService: https://tebex.io/terms-creator-agreement
  contact:
    email: tebex-integrations@overwolf.com
  license:
    name: MIT
    url: https://opensource.org/license/mit
  version: 1.0.0
servers:
  - url: https://headless.tebex.io/api
tags:
  - name: Ident
    description: A string identifier representing the basket
  - name: Basket
    description: The basket, similar to a standard eCommerce basket will contain the items that the customer is purchasing.
  - name: Categories
    description: Each store can have Categories of Packages that the webstore owner can define in order to better organize their packages offered.
  - name: Coupons
    description: Coupons define and apply a discount to a given package.
  - name: Gift Cards
    description: Gift cards can be presented as a form of payment for a basket, reducing the basket amount due.
  - name: Creator Codes
    description: Purchases can be attributed to Creators for revenue sharing.
  - name: Packages
    description: A package is a pre-defined item for sale.
  - name: Basket Packages
    description: A basket package is a Package within a basket
  - name: Webstores
    description: Webstore is the term for a Tebex store.
paths:
  /accounts/{webstoreIdentifier}:
    get:
      tags:
      - Webstores
      operationId: getWebstoreById
      summary: Fetch a webstore by its identifier
      parameters:
        - in: path
          name: webstoreIdentifier
          schema:
            type: string
            example: some-uuid
          required: true
          description: The webstore identifier.
      description: |- 
          Gets the webstore associated with the provided identifier.
      responses:
        '200':
          description: |- 
            Successful response returns the webstore's information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webstore'
        '422':
          description: The provided webstore ID is invalid.

components:
  schemas:
    Webstore:
      type: object
      properties:
        data: 
          type: object
          properties:
            id:
              type: integer
              example: 1
            description:
              type: string
              description: Store description in HTML format
              example: "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris fermentum eget tellus et cursus. Pellentesque vel vehicula velit, sit amet tincidunt diam. Aliquam sit amet fermentum lorem.</p>"
            name:
              type: string
              description: Name of the store
              example: "Minecraft Store"
            webstore_url:
              type: string
              format: uri
              description: URL of the webstore
              example: "https://example.tebex.io"
            currency:
              type: string
              description: Currency used in the store
              example: "USD"
            lang:
              type: string
              description: Language of the store
              example: "en"
            logo:
              type: string
              format: uri
              description: URL of the store's logo
              nullable: true
            platform_type:
              type: string
              description: Platform type for the store
              example: "Minecraft: Java Edition"
            created_at:
              type: string
              format: date-time
              description: The date and time when the store was created
              example: "2023-05-25T09:49:37+00:00"
    ErrorResponse:
      type: object
      properties:
        type: 
          description: A URI reference [RFC3986] that identifies the
            problem type.  This specification encourages that, when
            dereferenced, it provide human-readable documentation for the
            problem type (e.g., using HTML [W3C.REC-html5-20141028]).  When
            this member is not present, its value is assumed to be
            "about:blank".
        title: 
          type: string
          description: A short, human-readable summary of the problem type.  It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization
          example: Bad Request
        status:
          type: integer
          description: The HTTP status code generated by the origin server for the occurrence of the problem.
          example: 400
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
          example: Parameter 'first_name' is required.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced
          example: /path/to/ref
    
    
    GiftCard: #TODO
      type: object
    RecurringPeriod: #TODO
      type: object
    Tax: #TODO
      type: object
    Discount: #TODO
      type: object
    Coupon: #TODO
      type: object
    Basket:
      type: object
      properties:
        ident:
          type: string
          example: 1a-55fff4107740a1f40d844ff89607557f45bfafb3
        expire:
          type: string
          example: 2022-10-25 15:15:40
        price:
          type: number
          example: 1.27
        priceDetails:
          $ref: '#/components/schemas/PriceDetails'
        type:
          type: string
          example: single
        recurring:
          type: boolean
          example: false
        recurringPeriod:
          $ref: '#/components/schemas/RecurringPeriod'
          nullable: true
        recurringNextPaymentDate:
          type: string
          nullable: true
        isPaymentMethodUpdate:
          type: boolean
          example: false
        returnUrl:
          type: string
          nullable: true
          example: null
        complete:
          type: boolean
          example: false
        tax:
          $ref: '#/components/schemas/Tax'
        username:
          type: string
          example: null
          nullable: true
        discounts:
          type: array 
          items:
            $ref: '#/components/schemas/Discount'
        coupons:
          type: array 
          items:
            $ref: '#/components/schemas/Coupon'
        giftcards:
          type: array
          items:
            $ref: '#/components/schemas/GiftCard'
        address:
          $ref: '#/components/schemas/Address'
        rows:
          type: array
          items:
            $ref: "#/components/schemas/BasketPackage"
        fingerprint:
          type: string
          example: ""
          description: Browser fingerprint to identify the user
          nullable: true
        creator_code:
          type: string
          description: The creator code is used to share a percentage of the payment with another party. See more about creator codes at https://docs.tebex.io/creators/tebex-control-panel/engagement/creator-codes
        roundup:
          type: boolean
          example: false
          nullable: true
        cancel_url:
          type: string
          example: https://tebex.io
        complete_url:
          type: string
          nullable: true
          example: null
        complete_auto_redirect:
          type: boolean
          example: false
        custom: 
          type: object
          nullable: true
          example: 
            foo: bar
            ref: 1234
        
        #TODO
        #links:
        #  $ref: "#/components/schemas/BasketLinks"
    Package:
      type: object
      properties:
        name:
          type: string
          description: The name of the item being purchased. This should be user-friendly as it is shown to the customer on checkout and receipts.
          example: 1000 Gold
        price:
          type: number
          example: 1.27
          description: A float (decimal describing the price of the package in your account currency)
        expiry_period:
          type: string
          enum: [day, month, year]
          description: The renewal period of this item
          example: month
        expiry_length:
          type: integer
          description: An integer representing the number of `expiry_periods` that make up the renewal period.
          example: 3
        metaData:
          type: object
          properties:
            custom:
              type: string
              description: A free-text string field that is passed back to you via the webhook (for example, a tracking ID)
              example: Foo
          example:
            foo: bar
    BasketPackage:
      type: object
      description: A package within an existing basket.
      properties:
        qty:
          type: integer
          description: The quantity of `package` in this basket. This is not the total quantity of overall items in the basket.
          example: 2
        type:
          type: string
          enum: [single,subscription]
          example: single
          description: The type of payment, either `single` for one-time payments or `subscription`.
        revenue_share:
          type: array
          description: An array of payment destination objects describing how the purchase should be split between multiple wallets. **Only available with pre-agreement from Tebex.**
          items:
            $ref: '#/components/schemas/RevenueShare'
    RevenueShare:
      type: object
      properties:
        wallet_ref:
          type: string
          example: some_wallet_reference #TODO
        amount:
          type: number
          example: 0.50
          description: A float (decimal) value representing the amount of this payment in your account currency that is credited to the `wallet_ref`
        gateway_fee_percent:
          type: number
          example: 50.00
          description: A float (decimal) value representing the percentage of the gateway fee that should be dedicated from this wallet’s revenue share. This optional value can be anywhere between 0 - 100.
    PriceDetails:
      type: object
      properties:
        fullPrice:
          type: number
        subTotal:
          type: number
        discounts:
          type: array
          items:
            type: object #TODO
        total:
          type: number
        tax:
          type: number
        balance:
          type: number
        sales:
          type: array
          items:
            $ref: '#/components/schemas/Sale'
        giftcards:
          type: array
          items:
            $ref: '#/components/schemas/GiftCard'
#        recurring:   will be made obsolete in the next few weeks, potential do not document.
#          type: object
#          description: Contains recurring amount. Limited to 1 subscription package in the basket at a time. 
        roundUp:
          type: number
          nullable: true
      example:
        fullPrice: 1.40
        subTotal: 1.27
        discounts: []
        total: 1.40
        surcharges: []
        tax: 0.13
        balance: 0
        sales: []
        giftcards: []
        roundUp: null
    Address:
      type: object
      properties:
        name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        address:
          type: string
        email:
          type: string
        state_id:
          type: string
          nullable: true
        country:
          type: string
        postal_code:
          type: string
      example:
        name: Ted Tebex
        first_name: Ted
        last_name: Tebex
        address: 37 Broadhurst Gardens, London, United Kingdom, NW6 3QT
        email: example@tebex.io
        state_id: null
        country: UK
        postal_code: NW6 3QT
    Sale:
      type: object
      properties:
        name:
          type: string
          description: The name of the sale (displayed to the customer)
          example: Test Sale
        discount_type:
          type: string
          enum: [percentage, amount]
          description: The type of discount, either `percentage` for deducting a percentage of each item, or `amount` to deduct a fixed amount from each item.
          example: amount
        amount:
          type: number
          description: The amount or percentage to deduct
          example: 4.99