# coding: utf-8

"""
    Tebex Headless API

    The headless API is designed for implementing your own store frontend with the data of your store. You are able to call the Headless API directly from a web browser (such as within an SPA), or from a backend server, such as for in-game GUIs.

    The version of the OpenAPI document: 1.0.0
    Contact: tebex-integrations@overwolf.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from TebexHeadless.headless_api import HeadlessApi


class TestHeadlessApi(unittest.TestCase):
    """HeadlessApi unit test stubs"""

    def setUp(self) -> None:
        self.api = HeadlessApi()

    def tearDown(self) -> None:
        pass

    def test_add_basket_package(self) -> None:
        """Test case for add_basket_package

        Add a package to a basket
        """
        pass

    def test_apply_coupon(self) -> None:
        """Test case for apply_coupon

        Apply a coupon to a basket.
        """
        pass

    def test_apply_creator_code(self) -> None:
        """Test case for apply_creator_code

        Apply a creator code to a basket.
        """
        pass

    def test_apply_gift_card(self) -> None:
        """Test case for apply_gift_card

        Apply a gift card to a basket.
        """
        pass

    def test_create_basket(self) -> None:
        """Test case for create_basket

        Create a new basket
        """
        pass

    def test_get_all_categories(self) -> None:
        """Test case for get_all_categories

        Gets all categories available in the webstore.
        """
        pass

    def test_get_all_categories_including_packages(self) -> None:
        """Test case for get_all_categories_including_packages

        Gets a store's categories including all package information with them.
        """
        pass

    def test_get_all_packages(self) -> None:
        """Test case for get_all_packages

        Fetch all packages from a webstore
        """
        pass

    def test_get_all_packages_with_authed_ip(self) -> None:
        """Test case for get_all_packages_with_authed_ip

        Fetch a package from a webstore by its identifier
        """
        pass

    def test_get_all_packages_with_authed_ip_and_basket(self) -> None:
        """Test case for get_all_packages_with_authed_ip_and_basket

        Fetch a package from a webstore by its identifier
        """
        pass

    def test_get_all_packages_with_basket(self) -> None:
        """Test case for get_all_packages_with_basket

        Fetch a package from a webstore by its identifier
        """
        pass

    def test_get_basket_auth_url(self) -> None:
        """Test case for get_basket_auth_url

        Fetch a basket from a webstore by its identifier
        """
        pass

    def test_get_basket_by_id(self) -> None:
        """Test case for get_basket_by_id

        Fetch a basket from a webstore by its identifier
        """
        pass

    def test_get_category_by_id(self) -> None:
        """Test case for get_category_by_id

        Gets information about a specific category
        """
        pass

    def test_get_category_including_packages(self) -> None:
        """Test case for get_category_including_packages

        Gets information about a specific category, including all the packages in the category
        """
        pass

    def test_get_package_by_id(self) -> None:
        """Test case for get_package_by_id

        Fetch a package from a webstore by its identifier
        """
        pass

    def test_get_webstore_by_id(self) -> None:
        """Test case for get_webstore_by_id

        Fetch a webstore by its identifier
        """
        pass

    def test_remove_basket_package(self) -> None:
        """Test case for remove_basket_package

        Remove a package from a basket
        """
        pass

    def test_remove_coupon(self) -> None:
        """Test case for remove_coupon

        Remove a coupon from the basket.
        """
        pass

    def test_remove_creator_code(self) -> None:
        """Test case for remove_creator_code

        Remove a creator code from the basket.
        """
        pass

    def test_remove_gift_card(self) -> None:
        """Test case for remove_gift_card

        Remove a gift card from the basket.
        """
        pass

    def test_update_package_quantity(self) -> None:
        """Test case for update_package_quantity

        Updates the quantity of the given package in the basket. The user must be logged in before the quantity can be changed.
        """
        pass


if __name__ == '__main__':
    unittest.main()
