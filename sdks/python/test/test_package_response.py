# coding: utf-8

"""
    Tebex Headless API

    The headless API is designed for implementing your own store frontend with the data of your store. You are able to call the Headless API directly from a web browser (such as within an SPA), or from a backend server, such as for in-game GUIs.

    The version of the OpenAPI document: 1.0.0
    Contact: tebex-integrations@overwolf.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from TebexHeadless.models.package_response import PackageResponse

class TestPackageResponse(unittest.TestCase):
    """PackageResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PackageResponse:
        """Test PackageResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PackageResponse`
        """
        model = PackageResponse()
        if include_optional:
            return PackageResponse(
                data = [
                    TebexHeadless.models.package.Package(
                        id = 6276316, 
                        name = 'test package 101', 
                        description = '<p>this is just a test. only a test. nothing more.</p>', 
                        image = '', 
                        type = 'single', 
                        category = TebexHeadless.models.package_category.Package_category(
                            id = 2678660, 
                            name = 'Packages', ), 
                        base_price = 5, 
                        sales_tax = 0, 
                        total_price = 5, 
                        currency = 'USD', 
                        discount = 0, 
                        disable_quantity = False, 
                        disable_gifting = False, 
                        expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_at = '2024-05-21T18:09:17Z', 
                        updated_at = '2024-05-21T18:09:17Z', )
                    ]
            )
        else:
            return PackageResponse(
        )
        """

    def testPackageResponse(self):
        """Test PackageResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
