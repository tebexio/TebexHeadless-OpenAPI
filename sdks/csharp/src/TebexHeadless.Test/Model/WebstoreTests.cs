/*
 * Tebex Headless API
 *
 * The headless API is designed for implementing your own store frontend with the data of your store. You are able to call the Headless API directly from a web browser (such as within an SPA), or from a backend server, such as for in-game GUIs.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: tebex-integrations@overwolf.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using TebexHeadless.Model;
using TebexHeadless.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace TebexHeadless.Test.Model
{
    /// <summary>
    ///  Class for testing Webstore
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class WebstoreTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Webstore
        //private Webstore instance;

        public WebstoreTests()
        {
            // TODO uncomment below to create an instance of Webstore
            //instance = new Webstore();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Webstore
        /// </summary>
        [Fact]
        public void WebstoreInstanceTest()
        {
            // TODO uncomment below to test "IsType" Webstore
            //Assert.IsType<Webstore>(instance);
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'WebstoreUrl'
        /// </summary>
        [Fact]
        public void WebstoreUrlTest()
        {
            // TODO unit test for the property 'WebstoreUrl'
        }

        /// <summary>
        /// Test the property 'Currency'
        /// </summary>
        [Fact]
        public void CurrencyTest()
        {
            // TODO unit test for the property 'Currency'
        }

        /// <summary>
        /// Test the property 'Lang'
        /// </summary>
        [Fact]
        public void LangTest()
        {
            // TODO unit test for the property 'Lang'
        }

        /// <summary>
        /// Test the property 'Logo'
        /// </summary>
        [Fact]
        public void LogoTest()
        {
            // TODO unit test for the property 'Logo'
        }

        /// <summary>
        /// Test the property 'PlatformType'
        /// </summary>
        [Fact]
        public void PlatformTypeTest()
        {
            // TODO unit test for the property 'PlatformType'
        }

        /// <summary>
        /// Test the property 'PlatformTypeId'
        /// </summary>
        [Fact]
        public void PlatformTypeIdTest()
        {
            // TODO unit test for the property 'PlatformTypeId'
        }

        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }
    }
}
