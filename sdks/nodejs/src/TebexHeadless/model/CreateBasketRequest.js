/**
 * Tebex Headless API
 * The headless API is designed for implementing your own store frontend with the data of your store. You are able to call the Headless API directly from a web browser (such as within an SPA), or from a backend server, such as for in-game GUIs.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: tebex-integrations@overwolf.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateBasketRequest model module.
 * @module TebexHeadless/model/CreateBasketRequest
 * @version 1.0.0
 */
class CreateBasketRequest {
    /**
     * Constructs a new <code>CreateBasketRequest</code>.
     * @alias module:TebexHeadless/model/CreateBasketRequest
     */
    constructor() { 
        
        CreateBasketRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateBasketRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:TebexHeadless/model/CreateBasketRequest} obj Optional instance to populate.
     * @return {module:TebexHeadless/model/CreateBasketRequest} The populated <code>CreateBasketRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateBasketRequest();

            if (data.hasOwnProperty('complete_url')) {
                obj['complete_url'] = ApiClient.convertToType(data['complete_url'], 'String');
            }
            if (data.hasOwnProperty('cancel_url')) {
                obj['cancel_url'] = ApiClient.convertToType(data['cancel_url'], 'String');
            }
            if (data.hasOwnProperty('custom')) {
                obj['custom'] = ApiClient.convertToType(data['custom'], Object);
            }
            if (data.hasOwnProperty('complete_auto_redirect')) {
                obj['complete_auto_redirect'] = ApiClient.convertToType(data['complete_auto_redirect'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateBasketRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateBasketRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['complete_url'] && !(typeof data['complete_url'] === 'string' || data['complete_url'] instanceof String)) {
            throw new Error("Expected the field `complete_url` to be a primitive type in the JSON string but got " + data['complete_url']);
        }
        // ensure the json data is a string
        if (data['cancel_url'] && !(typeof data['cancel_url'] === 'string' || data['cancel_url'] instanceof String)) {
            throw new Error("Expected the field `cancel_url` to be a primitive type in the JSON string but got " + data['cancel_url']);
        }

        return true;
    }


}



/**
 * A URL the user can return to when checkout is completed.
 * @member {String} complete_url
 */
CreateBasketRequest.prototype['complete_url'] = undefined;

/**
 * A URL the user can return to when cancelling checkout.
 * @member {String} cancel_url
 */
CreateBasketRequest.prototype['cancel_url'] = undefined;

/**
 * Custom data you wish to associate with the basket. This data will be included with webhook responses and GET requests associated with the Basket.
 * @member {Object} custom
 */
CreateBasketRequest.prototype['custom'] = undefined;

/**
 * True if the user should automatically be redirected to the relevant complete/cancel URL
 * @member {Boolean} complete_auto_redirect
 */
CreateBasketRequest.prototype['complete_auto_redirect'] = undefined;






export default CreateBasketRequest;

