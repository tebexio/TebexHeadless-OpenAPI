/**
 * Tebex Headless API
 * The headless API is designed for implementing your own store frontend with the data of your store. You are able to call the Headless API directly from a web browser (such as within an SPA), or from a backend server, such as for in-game GUIs.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: tebex-integrations@overwolf.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/TebexHeadless/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/TebexHeadless/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TebexHeadlessApi);
  }
}(this, function(expect, TebexHeadlessApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TebexHeadlessApi.Package();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Package', function() {
    it('should create an instance of Package', function() {
      // uncomment below and update the code to test Package
      //var instance = new TebexHeadlessApi.Package();
      //expect(instance).to.be.a(TebexHeadlessApi.Package);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new TebexHeadlessApi.Package();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new TebexHeadlessApi.Package();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new TebexHeadlessApi.Package();
      //expect(instance).to.be();
    });

    it('should have the property image (base name: "image")', function() {
      // uncomment below and update the code to test the property image
      //var instance = new TebexHeadlessApi.Package();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new TebexHeadlessApi.Package();
      //expect(instance).to.be();
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new TebexHeadlessApi.Package();
      //expect(instance).to.be();
    });

    it('should have the property basePrice (base name: "base_price")', function() {
      // uncomment below and update the code to test the property basePrice
      //var instance = new TebexHeadlessApi.Package();
      //expect(instance).to.be();
    });

    it('should have the property salesTax (base name: "sales_tax")', function() {
      // uncomment below and update the code to test the property salesTax
      //var instance = new TebexHeadlessApi.Package();
      //expect(instance).to.be();
    });

    it('should have the property totalPrice (base name: "total_price")', function() {
      // uncomment below and update the code to test the property totalPrice
      //var instance = new TebexHeadlessApi.Package();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new TebexHeadlessApi.Package();
      //expect(instance).to.be();
    });

    it('should have the property discount (base name: "discount")', function() {
      // uncomment below and update the code to test the property discount
      //var instance = new TebexHeadlessApi.Package();
      //expect(instance).to.be();
    });

    it('should have the property disableQuantity (base name: "disable_quantity")', function() {
      // uncomment below and update the code to test the property disableQuantity
      //var instance = new TebexHeadlessApi.Package();
      //expect(instance).to.be();
    });

    it('should have the property disableGifting (base name: "disable_gifting")', function() {
      // uncomment below and update the code to test the property disableGifting
      //var instance = new TebexHeadlessApi.Package();
      //expect(instance).to.be();
    });

    it('should have the property expirationDate (base name: "expiration_date")', function() {
      // uncomment below and update the code to test the property expirationDate
      //var instance = new TebexHeadlessApi.Package();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new TebexHeadlessApi.Package();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new TebexHeadlessApi.Package();
      //expect(instance).to.be();
    });

  });

}));
