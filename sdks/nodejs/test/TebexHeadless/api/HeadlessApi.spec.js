/**
 * Tebex Headless API
 * The headless API is designed for implementing your own store frontend with the data of your store. You are able to call the Headless API directly from a web browser (such as within an SPA), or from a backend server, such as for in-game GUIs.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: tebex-integrations@overwolf.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/TebexHeadless/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/TebexHeadless/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TebexHeadlessApi);
  }
}(this, function(expect, TebexHeadlessApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TebexHeadlessApi.HeadlessApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('HeadlessApi', function() {
    describe('addBasketPackage', function() {
      it('should call addBasketPackage successfully', function(done) {
        //uncomment below and update the code to test addBasketPackage
        //instance.addBasketPackage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applyCoupon', function() {
      it('should call applyCoupon successfully', function(done) {
        //uncomment below and update the code to test applyCoupon
        //instance.applyCoupon(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applyCreatorCode', function() {
      it('should call applyCreatorCode successfully', function(done) {
        //uncomment below and update the code to test applyCreatorCode
        //instance.applyCreatorCode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applyGiftCard', function() {
      it('should call applyGiftCard successfully', function(done) {
        //uncomment below and update the code to test applyGiftCard
        //instance.applyGiftCard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBasket', function() {
      it('should call createBasket successfully', function(done) {
        //uncomment below and update the code to test createBasket
        //instance.createBasket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllCategories', function() {
      it('should call getAllCategories successfully', function(done) {
        //uncomment below and update the code to test getAllCategories
        //instance.getAllCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllCategoriesIncludingPackages', function() {
      it('should call getAllCategoriesIncludingPackages successfully', function(done) {
        //uncomment below and update the code to test getAllCategoriesIncludingPackages
        //instance.getAllCategoriesIncludingPackages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllPackages', function() {
      it('should call getAllPackages successfully', function(done) {
        //uncomment below and update the code to test getAllPackages
        //instance.getAllPackages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllPackagesWithAuthedIP', function() {
      it('should call getAllPackagesWithAuthedIP successfully', function(done) {
        //uncomment below and update the code to test getAllPackagesWithAuthedIP
        //instance.getAllPackagesWithAuthedIP(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllPackagesWithAuthedIPAndBasket', function() {
      it('should call getAllPackagesWithAuthedIPAndBasket successfully', function(done) {
        //uncomment below and update the code to test getAllPackagesWithAuthedIPAndBasket
        //instance.getAllPackagesWithAuthedIPAndBasket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllPackagesWithBasket', function() {
      it('should call getAllPackagesWithBasket successfully', function(done) {
        //uncomment below and update the code to test getAllPackagesWithBasket
        //instance.getAllPackagesWithBasket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBasketAuthUrl', function() {
      it('should call getBasketAuthUrl successfully', function(done) {
        //uncomment below and update the code to test getBasketAuthUrl
        //instance.getBasketAuthUrl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBasketById', function() {
      it('should call getBasketById successfully', function(done) {
        //uncomment below and update the code to test getBasketById
        //instance.getBasketById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCategoryById', function() {
      it('should call getCategoryById successfully', function(done) {
        //uncomment below and update the code to test getCategoryById
        //instance.getCategoryById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCategoryIncludingPackages', function() {
      it('should call getCategoryIncludingPackages successfully', function(done) {
        //uncomment below and update the code to test getCategoryIncludingPackages
        //instance.getCategoryIncludingPackages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPackageById', function() {
      it('should call getPackageById successfully', function(done) {
        //uncomment below and update the code to test getPackageById
        //instance.getPackageById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWebstoreById', function() {
      it('should call getWebstoreById successfully', function(done) {
        //uncomment below and update the code to test getWebstoreById
        //instance.getWebstoreById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeBasketPackage', function() {
      it('should call removeBasketPackage successfully', function(done) {
        //uncomment below and update the code to test removeBasketPackage
        //instance.removeBasketPackage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeCoupon', function() {
      it('should call removeCoupon successfully', function(done) {
        //uncomment below and update the code to test removeCoupon
        //instance.removeCoupon(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeCreatorCode', function() {
      it('should call removeCreatorCode successfully', function(done) {
        //uncomment below and update the code to test removeCreatorCode
        //instance.removeCreatorCode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeGiftCard', function() {
      it('should call removeGiftCard successfully', function(done) {
        //uncomment below and update the code to test removeGiftCard
        //instance.removeGiftCard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePackageQuantity', function() {
      it('should call updatePackageQuantity successfully', function(done) {
        //uncomment below and update the code to test updatePackageQuantity
        //instance.updatePackageQuantity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
